### YamlMime:ManagedReference
items:
- uid: Steam.Net.Account
  commentId: T:Steam.Net.Account
  id: Account
  parent: Steam.Net
  children:
  - Steam.Net.Account.AvatarHash
  - Steam.Net.Account.GetAvatarUri(Steam.Web.ImageSize)
  - Steam.Net.Account.Id
  - Steam.Net.Account.Name
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: Account
  fullName: Steam.Net.Account
  type: Class
  source:
    id: Account
    path: G:\Steam\src\Network\Steam.Net\Account.cs
    startLine: 8
  assemblies:
  - Steam.Net
  namespace: Steam.Net
  syntax:
    content: 'public abstract class Account : NetworkEntity'
    content.vb: >-
      Public MustInherit Class Account

          Inherits NetworkEntity
  inheritance:
  - System.Object
  - Steam.Net.NetworkEntity
  derivedClasses:
  - Steam.Net.Clan
  - Steam.Net.User
  inheritedMembers:
  - Steam.Net.NetworkEntity.Client
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steam.Net.Account.Id
  commentId: P:Steam.Net.Account.Id
  id: Id
  parent: Steam.Net.Account
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Account.Id
  fullName: Steam.Net.Account.Id
  type: Property
  source:
    id: Id
    path: G:\Steam\src\Network\Steam.Net\Account.cs
    startLine: 14
  assemblies:
  - Steam.Net
  namespace: Steam.Net
  syntax:
    content: public SteamId Id { get; }
    parameters: []
    return:
      type: Steam.Common.SteamId
    content.vb: Public ReadOnly Property Id As SteamId
  overload: Steam.Net.Account.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Net.Account.Name
  commentId: P:Steam.Net.Account.Name
  id: Name
  parent: Steam.Net.Account
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Account.Name
  fullName: Steam.Net.Account.Name
  type: Property
  source:
    id: Name
    path: G:\Steam\src\Network\Steam.Net\Account.cs
    startLine: 16
  assemblies:
  - Steam.Net
  namespace: Steam.Net
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Steam.Net.Account.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Net.Account.AvatarHash
  commentId: P:Steam.Net.Account.AvatarHash
  id: AvatarHash
  parent: Steam.Net.Account
  langs:
  - csharp
  - vb
  name: AvatarHash
  nameWithType: Account.AvatarHash
  fullName: Steam.Net.Account.AvatarHash
  type: Property
  source:
    id: AvatarHash
    path: G:\Steam\src\Network\Steam.Net\Account.cs
    startLine: 18
  assemblies:
  - Steam.Net
  namespace: Steam.Net
  syntax:
    content: public ImmutableArray<byte> AvatarHash { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{System.Byte}
    content.vb: Public ReadOnly Property AvatarHash As ImmutableArray(Of Byte)
  overload: Steam.Net.Account.AvatarHash*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Net.Account.GetAvatarUri(Steam.Web.ImageSize)
  commentId: M:Steam.Net.Account.GetAvatarUri(Steam.Web.ImageSize)
  id: GetAvatarUri(Steam.Web.ImageSize)
  parent: Steam.Net.Account
  langs:
  - csharp
  - vb
  name: GetAvatarUri(ImageSize)
  nameWithType: Account.GetAvatarUri(ImageSize)
  fullName: Steam.Net.Account.GetAvatarUri(Steam.Web.ImageSize)
  type: Method
  source:
    id: GetAvatarUri
    path: G:\Steam\src\Network\Steam.Net\Account.cs
    startLine: 20
  assemblies:
  - Steam.Net
  namespace: Steam.Net
  syntax:
    content: public Uri GetAvatarUri(ImageSize size)
    parameters:
    - id: size
      type: Steam.Web.ImageSize
    return:
      type: System.Uri
    content.vb: Public Function GetAvatarUri(size As ImageSize) As Uri
  overload: Steam.Net.Account.GetAvatarUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steam.Net
  commentId: N:Steam.Net
  isExternal: false
  name: Steam.Net
  nameWithType: Steam.Net
  fullName: Steam.Net
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steam.Net.NetworkEntity
  commentId: T:Steam.Net.NetworkEntity
  parent: Steam.Net
  isExternal: false
  name: NetworkEntity
  nameWithType: NetworkEntity
  fullName: Steam.Net.NetworkEntity
- uid: Steam.Net.NetworkEntity.Client
  commentId: P:Steam.Net.NetworkEntity.Client
  parent: Steam.Net.NetworkEntity
  isExternal: false
  name: Client
  nameWithType: NetworkEntity.Client
  fullName: Steam.Net.NetworkEntity.Client
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Steam.Net.Account.Id*
  commentId: Overload:Steam.Net.Account.Id
  isExternal: false
  name: Id
  nameWithType: Account.Id
  fullName: Steam.Net.Account.Id
- uid: Steam.Common.SteamId
  commentId: T:Steam.Common.SteamId
  parent: Steam.Common
  isExternal: false
  name: SteamId
  nameWithType: SteamId
  fullName: Steam.Common.SteamId
- uid: Steam.Common
  commentId: N:Steam.Common
  isExternal: false
  name: Steam.Common
  nameWithType: Steam.Common
  fullName: Steam.Common
- uid: Steam.Net.Account.Name*
  commentId: Overload:Steam.Net.Account.Name
  isExternal: false
  name: Name
  nameWithType: Account.Name
  fullName: Steam.Net.Account.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steam.Net.Account.AvatarHash*
  commentId: Overload:Steam.Net.Account.AvatarHash
  isExternal: false
  name: AvatarHash
  nameWithType: Account.AvatarHash
  fullName: Steam.Net.Account.AvatarHash
- uid: System.Collections.Immutable.ImmutableArray{System.Byte}
  commentId: T:System.Collections.Immutable.ImmutableArray{System.Byte}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<Byte>
  nameWithType: ImmutableArray<Byte>
  fullName: System.Collections.Immutable.ImmutableArray<System.Byte>
  nameWithType.vb: ImmutableArray(Of Byte)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of System.Byte)
  name.vb: ImmutableArray(Of Byte)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: Steam.Net.Account.GetAvatarUri*
  commentId: Overload:Steam.Net.Account.GetAvatarUri
  isExternal: false
  name: GetAvatarUri
  nameWithType: Account.GetAvatarUri
  fullName: Steam.Net.Account.GetAvatarUri
- uid: Steam.Web.ImageSize
  commentId: T:Steam.Web.ImageSize
  parent: Steam.Web
  isExternal: false
  name: ImageSize
  nameWithType: ImageSize
  fullName: Steam.Web.ImageSize
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Steam.Web
  commentId: N:Steam.Web
  isExternal: false
  name: Steam.Web
  nameWithType: Steam.Web
  fullName: Steam.Web
