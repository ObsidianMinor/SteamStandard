### YamlMime:ManagedReference
items:
- uid: Steam.Rest.RestResponse
  commentId: T:Steam.Rest.RestResponse
  id: RestResponse
  parent: Steam.Rest
  children:
  - Steam.Rest.RestResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.IO.Stream)
  - Steam.Rest.RestResponse.Content
  - Steam.Rest.RestResponse.Headers
  - Steam.Rest.RestResponse.Status
  langs:
  - csharp
  - vb
  name: RestResponse
  nameWithType: RestResponse
  fullName: Steam.Rest.RestResponse
  type: Class
  source:
    id: RestResponse
    path: G:\Steam\src\Common\Steam.Rest\RestResponse.cs
    startLine: 6
  assemblies:
  - Steam.Rest
  namespace: Steam.Rest
  syntax:
    content: public class RestResponse
    content.vb: Public Class RestResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steam.Rest.RestResponse.Status
  commentId: P:Steam.Rest.RestResponse.Status
  id: Status
  parent: Steam.Rest.RestResponse
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: RestResponse.Status
  fullName: Steam.Rest.RestResponse.Status
  type: Property
  source:
    id: Status
    path: G:\Steam\src\Common\Steam.Rest\RestResponse.cs
    startLine: 8
  assemblies:
  - Steam.Rest
  namespace: Steam.Rest
  syntax:
    content: public HttpStatusCode Status { get; }
    parameters: []
    return:
      type: System.Net.HttpStatusCode
    content.vb: Public ReadOnly Property Status As HttpStatusCode
  overload: Steam.Rest.RestResponse.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Rest.RestResponse.Headers
  commentId: P:Steam.Rest.RestResponse.Headers
  id: Headers
  parent: Steam.Rest.RestResponse
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: RestResponse.Headers
  fullName: Steam.Rest.RestResponse.Headers
  type: Property
  source:
    id: Headers
    path: G:\Steam\src\Common\Steam.Rest\RestResponse.cs
    startLine: 9
  assemblies:
  - Steam.Rest
  namespace: Steam.Rest
  syntax:
    content: public Dictionary<string, IEnumerable<string>> Headers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}}
    content.vb: Public ReadOnly Property Headers As Dictionary(Of String, IEnumerable(Of String))
  overload: Steam.Rest.RestResponse.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Rest.RestResponse.Content
  commentId: P:Steam.Rest.RestResponse.Content
  id: Content
  parent: Steam.Rest.RestResponse
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: RestResponse.Content
  fullName: Steam.Rest.RestResponse.Content
  type: Property
  source:
    id: Content
    path: G:\Steam\src\Common\Steam.Rest\RestResponse.cs
    startLine: 10
  assemblies:
  - Steam.Rest
  namespace: Steam.Rest
  syntax:
    content: public Stream Content { get; }
    parameters: []
    return:
      type: System.IO.Stream
    content.vb: Public ReadOnly Property Content As Stream
  overload: Steam.Rest.RestResponse.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Rest.RestResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.IO.Stream)
  commentId: M:Steam.Rest.RestResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.IO.Stream)
  id: '#ctor(System.Net.HttpStatusCode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.IO.Stream)'
  parent: Steam.Rest.RestResponse
  langs:
  - csharp
  - vb
  name: RestResponse(HttpStatusCode, Dictionary<String, IEnumerable<String>>, Stream)
  nameWithType: RestResponse.RestResponse(HttpStatusCode, Dictionary<String, IEnumerable<String>>, Stream)
  fullName: Steam.Rest.RestResponse.RestResponse(System.Net.HttpStatusCode, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.IEnumerable<System.String>>, System.IO.Stream)
  type: Constructor
  source:
    id: .ctor
    path: G:\Steam\src\Common\Steam.Rest\RestResponse.cs
    startLine: 12
  assemblies:
  - Steam.Rest
  namespace: Steam.Rest
  syntax:
    content: public RestResponse(HttpStatusCode statusCode, Dictionary<string, IEnumerable<string>> headers, Stream content)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
    - id: headers
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}}
    - id: content
      type: System.IO.Stream
    content.vb: Public Sub New(statusCode As HttpStatusCode, headers As Dictionary(Of String, IEnumerable(Of String)), content As Stream)
  overload: Steam.Rest.RestResponse.#ctor*
  nameWithType.vb: RestResponse.RestResponse(HttpStatusCode, Dictionary(Of String, IEnumerable(Of String)), Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steam.Rest.RestResponse.RestResponse(System.Net.HttpStatusCode, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.String)), System.IO.Stream)
  name.vb: RestResponse(HttpStatusCode, Dictionary(Of String, IEnumerable(Of String)), Stream)
references:
- uid: Steam.Rest
  commentId: N:Steam.Rest
  isExternal: false
  name: Steam.Rest
  nameWithType: Steam.Rest
  fullName: Steam.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Steam.Rest.RestResponse.Status*
  commentId: Overload:Steam.Rest.RestResponse.Status
  isExternal: false
  name: Status
  nameWithType: RestResponse.Status
  fullName: Steam.Rest.RestResponse.Status
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Steam.Rest.RestResponse.Headers*
  commentId: Overload:Steam.Rest.RestResponse.Headers
  isExternal: false
  name: Headers
  nameWithType: RestResponse.Headers
  fullName: Steam.Rest.RestResponse.Headers
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IEnumerable<String>>
  nameWithType: Dictionary<String, IEnumerable<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Dictionary(Of String, IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Dictionary(Of String, IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steam.Rest.RestResponse.Content*
  commentId: Overload:Steam.Rest.RestResponse.Content
  isExternal: false
  name: Content
  nameWithType: RestResponse.Content
  fullName: Steam.Rest.RestResponse.Content
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Steam.Rest.RestResponse.#ctor*
  commentId: Overload:Steam.Rest.RestResponse.#ctor
  isExternal: false
  name: RestResponse
  nameWithType: RestResponse.RestResponse
  fullName: Steam.Rest.RestResponse.RestResponse
