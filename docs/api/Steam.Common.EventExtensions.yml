### YamlMime:ManagedReference
items:
- uid: Steam.Common.EventExtensions
  commentId: T:Steam.Common.EventExtensions
  id: EventExtensions
  parent: Steam.Common
  children:
  - Steam.Common.EventExtensions.InvokeAsync(Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}})
  - Steam.Common.EventExtensions.InvokeAsync``1(Steam.Common.AsyncEvent{System.Func{``0,System.Threading.Tasks.Task}},``0)
  - Steam.Common.EventExtensions.InvokeAsync``2(Steam.Common.AsyncEvent{System.Func{``0,``1,System.Threading.Tasks.Task}},``0,``1)
  - Steam.Common.EventExtensions.InvokeAsync``3(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,System.Threading.Tasks.Task}},``0,``1,``2)
  - Steam.Common.EventExtensions.InvokeAsync``4(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task}},``0,``1,``2,``3)
  - Steam.Common.EventExtensions.InvokeAsync``5(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task}},``0,``1,``2,``3,``4)
  langs:
  - csharp
  - vb
  name: EventExtensions
  nameWithType: EventExtensions
  fullName: Steam.Common.EventExtensions
  type: Class
  source:
    id: EventExtensions
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 62
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nProvides extensions to invoke events which return Tasks\n"
  example: []
  syntax:
    content: public static class EventExtensions
    content.vb: Public Module EventExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steam.Common.EventExtensions.InvokeAsync(Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}})
  commentId: M:Steam.Common.EventExtensions.InvokeAsync(Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}})
  id: InvokeAsync(Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}})
  isExtensionMethod: true
  parent: Steam.Common.EventExtensions
  langs:
  - csharp
  - vb
  name: InvokeAsync(AsyncEvent<Func<Task>>)
  nameWithType: EventExtensions.InvokeAsync(AsyncEvent<Func<Task>>)
  fullName: Steam.Common.EventExtensions.InvokeAsync(Steam.Common.AsyncEvent<System.Func<System.Threading.Tasks.Task>>)
  type: Method
  source:
    id: InvokeAsync
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 69
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nInvokes a event function which returns Task\n"
  example: []
  syntax:
    content: public static Task InvokeAsync(this AsyncEvent<Func<Task>> eventHandler)
    parameters:
    - id: eventHandler
      type: Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}}
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAsync(eventHandler As AsyncEvent(Of Func(Of Task))) As Task
  overload: Steam.Common.EventExtensions.InvokeAsync*
  nameWithType.vb: EventExtensions.InvokeAsync(AsyncEvent(Of Func(Of Task)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.EventExtensions.InvokeAsync(Steam.Common.AsyncEvent(Of System.Func(Of System.Threading.Tasks.Task)))
  name.vb: InvokeAsync(AsyncEvent(Of Func(Of Task)))
- uid: Steam.Common.EventExtensions.InvokeAsync``1(Steam.Common.AsyncEvent{System.Func{``0,System.Threading.Tasks.Task}},``0)
  commentId: M:Steam.Common.EventExtensions.InvokeAsync``1(Steam.Common.AsyncEvent{System.Func{``0,System.Threading.Tasks.Task}},``0)
  id: InvokeAsync``1(Steam.Common.AsyncEvent{System.Func{``0,System.Threading.Tasks.Task}},``0)
  isExtensionMethod: true
  parent: Steam.Common.EventExtensions
  langs:
  - csharp
  - vb
  name: InvokeAsync<T>(AsyncEvent<Func<T, Task>>, T)
  nameWithType: EventExtensions.InvokeAsync<T>(AsyncEvent<Func<T, Task>>, T)
  fullName: Steam.Common.EventExtensions.InvokeAsync<T>(Steam.Common.AsyncEvent<System.Func<T, System.Threading.Tasks.Task>>, T)
  type: Method
  source:
    id: InvokeAsync
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 82
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nInvokes an event function which has one arg and returns a task\n"
  example: []
  syntax:
    content: public static Task InvokeAsync<T>(this AsyncEvent<Func<T, Task>> eventHandler, T arg)
    parameters:
    - id: eventHandler
      type: Steam.Common.AsyncEvent{System.Func{{T},System.Threading.Tasks.Task}}
      description: ''
    - id: arg
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAsync(Of T)(eventHandler As AsyncEvent(Of Func(Of T, Task)), arg As T) As Task
  overload: Steam.Common.EventExtensions.InvokeAsync*
  nameWithType.vb: EventExtensions.InvokeAsync(Of T)(AsyncEvent(Of Func(Of T, Task)), T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.EventExtensions.InvokeAsync(Of T)(Steam.Common.AsyncEvent(Of System.Func(Of T, System.Threading.Tasks.Task)), T)
  name.vb: InvokeAsync(Of T)(AsyncEvent(Of Func(Of T, Task)), T)
- uid: Steam.Common.EventExtensions.InvokeAsync``2(Steam.Common.AsyncEvent{System.Func{``0,``1,System.Threading.Tasks.Task}},``0,``1)
  commentId: M:Steam.Common.EventExtensions.InvokeAsync``2(Steam.Common.AsyncEvent{System.Func{``0,``1,System.Threading.Tasks.Task}},``0,``1)
  id: InvokeAsync``2(Steam.Common.AsyncEvent{System.Func{``0,``1,System.Threading.Tasks.Task}},``0,``1)
  isExtensionMethod: true
  parent: Steam.Common.EventExtensions
  langs:
  - csharp
  - vb
  name: InvokeAsync<T1, T2>(AsyncEvent<Func<T1, T2, Task>>, T1, T2)
  nameWithType: EventExtensions.InvokeAsync<T1, T2>(AsyncEvent<Func<T1, T2, Task>>, T1, T2)
  fullName: Steam.Common.EventExtensions.InvokeAsync<T1, T2>(Steam.Common.AsyncEvent<System.Func<T1, T2, System.Threading.Tasks.Task>>, T1, T2)
  type: Method
  source:
    id: InvokeAsync
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 97
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nInvokes an event function which has two args and returns a task\n"
  example: []
  syntax:
    content: public static Task InvokeAsync<T1, T2>(this AsyncEvent<Func<T1, T2, Task>> eventHandler, T1 arg1, T2 arg2)
    parameters:
    - id: eventHandler
      type: Steam.Common.AsyncEvent{System.Func{{T1},{T2},System.Threading.Tasks.Task}}
      description: ''
    - id: arg1
      type: '{T1}'
      description: ''
    - id: arg2
      type: '{T2}'
      description: ''
    typeParameters:
    - id: T1
      description: ''
    - id: T2
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAsync(Of T1, T2)(eventHandler As AsyncEvent(Of Func(Of T1, T2, Task)), arg1 As T1, arg2 As T2) As Task
  overload: Steam.Common.EventExtensions.InvokeAsync*
  nameWithType.vb: EventExtensions.InvokeAsync(Of T1, T2)(AsyncEvent(Of Func(Of T1, T2, Task)), T1, T2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.EventExtensions.InvokeAsync(Of T1, T2)(Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, System.Threading.Tasks.Task)), T1, T2)
  name.vb: InvokeAsync(Of T1, T2)(AsyncEvent(Of Func(Of T1, T2, Task)), T1, T2)
- uid: Steam.Common.EventExtensions.InvokeAsync``3(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,System.Threading.Tasks.Task}},``0,``1,``2)
  commentId: M:Steam.Common.EventExtensions.InvokeAsync``3(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,System.Threading.Tasks.Task}},``0,``1,``2)
  id: InvokeAsync``3(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,System.Threading.Tasks.Task}},``0,``1,``2)
  isExtensionMethod: true
  parent: Steam.Common.EventExtensions
  langs:
  - csharp
  - vb
  name: InvokeAsync<T1, T2, T3>(AsyncEvent<Func<T1, T2, T3, Task>>, T1, T2, T3)
  nameWithType: EventExtensions.InvokeAsync<T1, T2, T3>(AsyncEvent<Func<T1, T2, T3, Task>>, T1, T2, T3)
  fullName: Steam.Common.EventExtensions.InvokeAsync<T1, T2, T3>(Steam.Common.AsyncEvent<System.Func<T1, T2, T3, System.Threading.Tasks.Task>>, T1, T2, T3)
  type: Method
  source:
    id: InvokeAsync
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 114
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nInvokes an event function which has three args and returns a task\n"
  example: []
  syntax:
    content: public static Task InvokeAsync<T1, T2, T3>(this AsyncEvent<Func<T1, T2, T3, Task>> eventHandler, T1 arg1, T2 arg2, T3 arg3)
    parameters:
    - id: eventHandler
      type: Steam.Common.AsyncEvent{System.Func{{T1},{T2},{T3},System.Threading.Tasks.Task}}
      description: ''
    - id: arg1
      type: '{T1}'
      description: ''
    - id: arg2
      type: '{T2}'
      description: ''
    - id: arg3
      type: '{T3}'
      description: ''
    typeParameters:
    - id: T1
      description: ''
    - id: T2
      description: ''
    - id: T3
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAsync(Of T1, T2, T3)(eventHandler As AsyncEvent(Of Func(Of T1, T2, T3, Task)), arg1 As T1, arg2 As T2, arg3 As T3) As Task
  overload: Steam.Common.EventExtensions.InvokeAsync*
  nameWithType.vb: EventExtensions.InvokeAsync(Of T1, T2, T3)(AsyncEvent(Of Func(Of T1, T2, T3, Task)), T1, T2, T3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.EventExtensions.InvokeAsync(Of T1, T2, T3)(Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, T3, System.Threading.Tasks.Task)), T1, T2, T3)
  name.vb: InvokeAsync(Of T1, T2, T3)(AsyncEvent(Of Func(Of T1, T2, T3, Task)), T1, T2, T3)
- uid: Steam.Common.EventExtensions.InvokeAsync``4(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task}},``0,``1,``2,``3)
  commentId: M:Steam.Common.EventExtensions.InvokeAsync``4(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task}},``0,``1,``2,``3)
  id: InvokeAsync``4(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task}},``0,``1,``2,``3)
  isExtensionMethod: true
  parent: Steam.Common.EventExtensions
  langs:
  - csharp
  - vb
  name: InvokeAsync<T1, T2, T3, T4>(AsyncEvent<Func<T1, T2, T3, T4, Task>>, T1, T2, T3, T4)
  nameWithType: EventExtensions.InvokeAsync<T1, T2, T3, T4>(AsyncEvent<Func<T1, T2, T3, T4, Task>>, T1, T2, T3, T4)
  fullName: Steam.Common.EventExtensions.InvokeAsync<T1, T2, T3, T4>(Steam.Common.AsyncEvent<System.Func<T1, T2, T3, T4, System.Threading.Tasks.Task>>, T1, T2, T3, T4)
  type: Method
  source:
    id: InvokeAsync
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 133
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nInvokes an event function which has four args and returns a task\n"
  example: []
  syntax:
    content: public static Task InvokeAsync<T1, T2, T3, T4>(this AsyncEvent<Func<T1, T2, T3, T4, Task>> eventHandler, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
    parameters:
    - id: eventHandler
      type: Steam.Common.AsyncEvent{System.Func{{T1},{T2},{T3},{T4},System.Threading.Tasks.Task}}
      description: ''
    - id: arg1
      type: '{T1}'
      description: ''
    - id: arg2
      type: '{T2}'
      description: ''
    - id: arg3
      type: '{T3}'
      description: ''
    - id: arg4
      type: '{T4}'
      description: ''
    typeParameters:
    - id: T1
      description: ''
    - id: T2
      description: ''
    - id: T3
      description: ''
    - id: T4
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAsync(Of T1, T2, T3, T4)(eventHandler As AsyncEvent(Of Func(Of T1, T2, T3, T4, Task)), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4) As Task
  overload: Steam.Common.EventExtensions.InvokeAsync*
  nameWithType.vb: EventExtensions.InvokeAsync(Of T1, T2, T3, T4)(AsyncEvent(Of Func(Of T1, T2, T3, T4, Task)), T1, T2, T3, T4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.EventExtensions.InvokeAsync(Of T1, T2, T3, T4)(Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, T3, T4, System.Threading.Tasks.Task)), T1, T2, T3, T4)
  name.vb: InvokeAsync(Of T1, T2, T3, T4)(AsyncEvent(Of Func(Of T1, T2, T3, T4, Task)), T1, T2, T3, T4)
- uid: Steam.Common.EventExtensions.InvokeAsync``5(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task}},``0,``1,``2,``3,``4)
  commentId: M:Steam.Common.EventExtensions.InvokeAsync``5(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task}},``0,``1,``2,``3,``4)
  id: InvokeAsync``5(Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task}},``0,``1,``2,``3,``4)
  isExtensionMethod: true
  parent: Steam.Common.EventExtensions
  langs:
  - csharp
  - vb
  name: InvokeAsync<T1, T2, T3, T4, T5>(AsyncEvent<Func<T1, T2, T3, T4, T5, Task>>, T1, T2, T3, T4, T5)
  nameWithType: EventExtensions.InvokeAsync<T1, T2, T3, T4, T5>(AsyncEvent<Func<T1, T2, T3, T4, T5, Task>>, T1, T2, T3, T4, T5)
  fullName: Steam.Common.EventExtensions.InvokeAsync<T1, T2, T3, T4, T5>(Steam.Common.AsyncEvent<System.Func<T1, T2, T3, T4, T5, System.Threading.Tasks.Task>>, T1, T2, T3, T4, T5)
  type: Method
  source:
    id: InvokeAsync
    path: G:\Steam\src\Common\Steam.Common\AsyncEvent.cs
    startLine: 154
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nInvokes an event function which has five args and returns a task\n"
  example: []
  syntax:
    content: public static Task InvokeAsync<T1, T2, T3, T4, T5>(this AsyncEvent<Func<T1, T2, T3, T4, T5, Task>> eventHandler, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
    parameters:
    - id: eventHandler
      type: Steam.Common.AsyncEvent{System.Func{{T1},{T2},{T3},{T4},{T5},System.Threading.Tasks.Task}}
      description: ''
    - id: arg1
      type: '{T1}'
      description: ''
    - id: arg2
      type: '{T2}'
      description: ''
    - id: arg3
      type: '{T3}'
      description: ''
    - id: arg4
      type: '{T4}'
      description: ''
    - id: arg5
      type: '{T5}'
      description: ''
    typeParameters:
    - id: T1
      description: ''
    - id: T2
      description: ''
    - id: T3
      description: ''
    - id: T4
      description: ''
    - id: T5
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAsync(Of T1, T2, T3, T4, T5)(eventHandler As AsyncEvent(Of Func(Of T1, T2, T3, T4, T5, Task)), arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5) As Task
  overload: Steam.Common.EventExtensions.InvokeAsync*
  nameWithType.vb: EventExtensions.InvokeAsync(Of T1, T2, T3, T4, T5)(AsyncEvent(Of Func(Of T1, T2, T3, T4, T5, Task)), T1, T2, T3, T4, T5)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.EventExtensions.InvokeAsync(Of T1, T2, T3, T4, T5)(Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, T3, T4, T5, System.Threading.Tasks.Task)), T1, T2, T3, T4, T5)
  name.vb: InvokeAsync(Of T1, T2, T3, T4, T5)(AsyncEvent(Of Func(Of T1, T2, T3, T4, T5, Task)), T1, T2, T3, T4, T5)
references:
- uid: Steam.Common
  commentId: N:Steam.Common
  isExternal: false
  name: Steam.Common
  nameWithType: Steam.Common
  fullName: Steam.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Steam.Common.EventExtensions.InvokeAsync*
  commentId: Overload:Steam.Common.EventExtensions.InvokeAsync
  isExternal: false
  name: InvokeAsync
  nameWithType: EventExtensions.InvokeAsync
  fullName: Steam.Common.EventExtensions.InvokeAsync
- uid: Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}}
  commentId: T:Steam.Common.AsyncEvent{System.Func{System.Threading.Tasks.Task}}
  parent: Steam.Common
  definition: Steam.Common.AsyncEvent`1
  name: AsyncEvent<Func<Task>>
  nameWithType: AsyncEvent<Func<Task>>
  fullName: Steam.Common.AsyncEvent<System.Func<System.Threading.Tasks.Task>>
  nameWithType.vb: AsyncEvent(Of Func(Of Task))
  fullName.vb: Steam.Common.AsyncEvent(Of System.Func(Of System.Threading.Tasks.Task))
  name.vb: AsyncEvent(Of Func(Of Task))
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Steam.Common.AsyncEvent`1
  commentId: T:Steam.Common.AsyncEvent`1
  isExternal: false
  name: AsyncEvent<T>
  nameWithType: AsyncEvent<T>
  fullName: Steam.Common.AsyncEvent<T>
  nameWithType.vb: AsyncEvent(Of T)
  fullName.vb: Steam.Common.AsyncEvent(Of T)
  name.vb: AsyncEvent(Of T)
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steam.Common.AsyncEvent{System.Func{{T},System.Threading.Tasks.Task}}
  commentId: T:Steam.Common.AsyncEvent{System.Func{``0,System.Threading.Tasks.Task}}
  parent: Steam.Common
  definition: Steam.Common.AsyncEvent`1
  name: AsyncEvent<Func<T, Task>>
  nameWithType: AsyncEvent<Func<T, Task>>
  fullName: Steam.Common.AsyncEvent<System.Func<T, System.Threading.Tasks.Task>>
  nameWithType.vb: AsyncEvent(Of Func(Of T, Task))
  fullName.vb: Steam.Common.AsyncEvent(Of System.Func(Of T, System.Threading.Tasks.Task))
  name.vb: AsyncEvent(Of Func(Of T, Task))
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Steam.Common.AsyncEvent{System.Func{{T1},{T2},System.Threading.Tasks.Task}}
  commentId: T:Steam.Common.AsyncEvent{System.Func{``0,``1,System.Threading.Tasks.Task}}
  parent: Steam.Common
  definition: Steam.Common.AsyncEvent`1
  name: AsyncEvent<Func<T1, T2, Task>>
  nameWithType: AsyncEvent<Func<T1, T2, Task>>
  fullName: Steam.Common.AsyncEvent<System.Func<T1, T2, System.Threading.Tasks.Task>>
  nameWithType.vb: AsyncEvent(Of Func(Of T1, T2, Task))
  fullName.vb: Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, System.Threading.Tasks.Task))
  name.vb: AsyncEvent(Of Func(Of T1, T2, Task))
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T1
  isExternal: false
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  isExternal: false
  name: T2
  nameWithType: T2
  fullName: T2
- uid: Steam.Common.AsyncEvent{System.Func{{T1},{T2},{T3},System.Threading.Tasks.Task}}
  commentId: T:Steam.Common.AsyncEvent{System.Func{``0,``1,``2,System.Threading.Tasks.Task}}
  parent: Steam.Common
  definition: Steam.Common.AsyncEvent`1
  name: AsyncEvent<Func<T1, T2, T3, Task>>
  nameWithType: AsyncEvent<Func<T1, T2, T3, Task>>
  fullName: Steam.Common.AsyncEvent<System.Func<T1, T2, T3, System.Threading.Tasks.Task>>
  nameWithType.vb: AsyncEvent(Of Func(Of T1, T2, T3, Task))
  fullName.vb: Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, T3, System.Threading.Tasks.Task))
  name.vb: AsyncEvent(Of Func(Of T1, T2, T3, Task))
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T3
  isExternal: false
  name: T3
  nameWithType: T3
  fullName: T3
- uid: Steam.Common.AsyncEvent{System.Func{{T1},{T2},{T3},{T4},System.Threading.Tasks.Task}}
  commentId: T:Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,System.Threading.Tasks.Task}}
  parent: Steam.Common
  definition: Steam.Common.AsyncEvent`1
  name: AsyncEvent<Func<T1, T2, T3, T4, Task>>
  nameWithType: AsyncEvent<Func<T1, T2, T3, T4, Task>>
  fullName: Steam.Common.AsyncEvent<System.Func<T1, T2, T3, T4, System.Threading.Tasks.Task>>
  nameWithType.vb: AsyncEvent(Of Func(Of T1, T2, T3, T4, Task))
  fullName.vb: Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, T3, T4, System.Threading.Tasks.Task))
  name.vb: AsyncEvent(Of Func(Of T1, T2, T3, T4, Task))
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T4
  isExternal: false
  name: T4
  nameWithType: T4
  fullName: T4
- uid: Steam.Common.AsyncEvent{System.Func{{T1},{T2},{T3},{T4},{T5},System.Threading.Tasks.Task}}
  commentId: T:Steam.Common.AsyncEvent{System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.Task}}
  parent: Steam.Common
  definition: Steam.Common.AsyncEvent`1
  name: AsyncEvent<Func<T1, T2, T3, T4, T5, Task>>
  nameWithType: AsyncEvent<Func<T1, T2, T3, T4, T5, Task>>
  fullName: Steam.Common.AsyncEvent<System.Func<T1, T2, T3, T4, T5, System.Threading.Tasks.Task>>
  nameWithType.vb: AsyncEvent(Of Func(Of T1, T2, T3, T4, T5, Task))
  fullName.vb: Steam.Common.AsyncEvent(Of System.Func(Of T1, T2, T3, T4, T5, System.Threading.Tasks.Task))
  name.vb: AsyncEvent(Of Func(Of T1, T2, T3, T4, T5, Task))
  spec.csharp:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steam.Common.AsyncEvent`1
    name: AsyncEvent
    nameWithType: AsyncEvent
    fullName: Steam.Common.AsyncEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T5}'
  commentId: '!:T5'
  definition: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T5
  commentId: '!:T5'
  isExternal: false
  name: T5
  nameWithType: T5
  fullName: T5
