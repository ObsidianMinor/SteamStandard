### YamlMime:ManagedReference
items:
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens
  commentId: T:Steam.Net.Messages.Protobufs.GameConnectTokens
  id: GameConnectTokens
  parent: Steam.Net.Messages.Protobufs
  children:
  - Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep
  - Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf#IExtensible#GetExtensionObject(System.Boolean)
  - Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens
  langs:
  - csharp
  - vb
  name: GameConnectTokens
  nameWithType: GameConnectTokens
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens
  type: Class
  source:
    id: GameConnectTokens
    path: G:\Steam\src\Network\Steam.Net\Messages\Protobufs\GameConnectTokens.cs
    startLine: 6
  assemblies:
  - Steam.Net
  namespace: Steam.Net.Messages.Protobufs
  syntax:
    content: >-
      [ProtoContract(Name = "CMsgClientGameConnectTokens")]

      public class GameConnectTokens : IExtensible
    content.vb: >-
      <ProtoContract(Name:="CMsgClientGameConnectTokens")>

      Public Class GameConnectTokens

          Implements IExtensible
  inheritance:
  - System.Object
  implements:
  - ProtoBuf.IExtensible
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: CMsgClientGameConnectTokens
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep
  commentId: P:Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep
  id: MaxTokensToKeep
  parent: Steam.Net.Messages.Protobufs.GameConnectTokens
  langs:
  - csharp
  - vb
  name: MaxTokensToKeep
  nameWithType: GameConnectTokens.MaxTokensToKeep
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep
  type: Property
  source:
    id: MaxTokensToKeep
    path: G:\Steam\src\Network\Steam.Net\Messages\Protobufs\GameConnectTokens.cs
    startLine: 9
  assemblies:
  - Steam.Net
  namespace: Steam.Net.Messages.Protobufs
  syntax:
    content: >-
      [ProtoMember(1, DataFormat = DataFormat.TwosComplement)]

      public uint MaxTokensToKeep { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: >-
      <ProtoMember(1, DataFormat:=DataFormat.TwosComplement)>

      Public Property MaxTokensToKeep As UInteger
  overload: Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep*
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    namedArguments:
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens
  commentId: P:Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens
  id: Tokens
  parent: Steam.Net.Messages.Protobufs.GameConnectTokens
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: GameConnectTokens.Tokens
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens
  type: Property
  source:
    id: Tokens
    path: G:\Steam\src\Network\Steam.Net\Messages\Protobufs\GameConnectTokens.cs
    startLine: 13
  assemblies:
  - Steam.Net
  namespace: Steam.Net.Messages.Protobufs
  syntax:
    content: public List<byte[]> Tokens { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Byte[]}
    content.vb: Public ReadOnly Property Tokens As List(Of Byte())
  overload: Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf#IExtensible#GetExtensionObject(System.Boolean)
  commentId: M:Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf#IExtensible#GetExtensionObject(System.Boolean)
  id: ProtoBuf#IExtensible#GetExtensionObject(System.Boolean)
  isEii: true
  parent: Steam.Net.Messages.Protobufs.GameConnectTokens
  langs:
  - csharp
  - vb
  name: IExtensible.GetExtensionObject(Boolean)
  nameWithType: GameConnectTokens.IExtensible.GetExtensionObject(Boolean)
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
  type: Method
  source:
    id: ProtoBuf.IExtensible.GetExtensionObject
    path: G:\Steam\src\Network\Steam.Net\Messages\Protobufs\GameConnectTokens.cs
    startLine: 16
  assemblies:
  - Steam.Net
  namespace: Steam.Net.Messages.Protobufs
  syntax:
    content: IExtension IExtensible.GetExtensionObject(bool createIfMissing)
    parameters:
    - id: createIfMissing
      type: System.Boolean
    return:
      type: ProtoBuf.IExtension
    content.vb: Function ProtoBuf.IExtensible.GetExtensionObject(createIfMissing As Boolean) As IExtension Implements IExtensible.GetExtensionObject
  overload: Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf#IExtensible#GetExtensionObject*
  implements:
  - ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
  nameWithType.vb: GameConnectTokens.ProtoBuf.IExtensible.GetExtensionObject(Boolean)
  name.vb: ProtoBuf.IExtensible.GetExtensionObject(Boolean)
references:
- uid: Steam.Net.Messages.Protobufs
  commentId: N:Steam.Net.Messages.Protobufs
  isExternal: false
  name: Steam.Net.Messages.Protobufs
  nameWithType: Steam.Net.Messages.Protobufs
  fullName: Steam.Net.Messages.Protobufs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ProtoBuf.IExtensible
  commentId: T:ProtoBuf.IExtensible
  parent: ProtoBuf
  isExternal: true
  name: IExtensible
  nameWithType: IExtensible
  fullName: ProtoBuf.IExtensible
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ProtoBuf
  commentId: N:ProtoBuf
  isExternal: false
  name: ProtoBuf
  nameWithType: ProtoBuf
  fullName: ProtoBuf
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep*
  commentId: Overload:Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep
  isExternal: false
  name: MaxTokensToKeep
  nameWithType: GameConnectTokens.MaxTokensToKeep
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens.MaxTokensToKeep
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens*
  commentId: Overload:Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens
  isExternal: false
  name: Tokens
  nameWithType: GameConnectTokens.Tokens
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens.Tokens
- uid: System.Collections.Generic.List{System.Byte[]}
  commentId: T:System.Collections.Generic.List{System.Byte[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Byte[]>
  nameWithType: List<Byte[]>
  fullName: System.Collections.Generic.List<System.Byte[]>
  nameWithType.vb: List(Of Byte())
  fullName.vb: System.Collections.Generic.List(Of System.Byte())
  name.vb: List(Of Byte())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf#IExtensible#GetExtensionObject*
  commentId: Overload:Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf#IExtensible#GetExtensionObject
  isExternal: false
  name: IExtensible.GetExtensionObject
  nameWithType: GameConnectTokens.IExtensible.GetExtensionObject
  fullName: Steam.Net.Messages.Protobufs.GameConnectTokens.ProtoBuf.IExtensible.GetExtensionObject
  nameWithType.vb: GameConnectTokens.ProtoBuf.IExtensible.GetExtensionObject
  name.vb: ProtoBuf.IExtensible.GetExtensionObject
- uid: ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
  commentId: M:ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
  parent: ProtoBuf.IExtensible
  isExternal: true
  name: GetExtensionObject(Boolean)
  nameWithType: IExtensible.GetExtensionObject(Boolean)
  fullName: ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
  spec.csharp:
  - uid: ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
    name: GetExtensionObject
    nameWithType: IExtensible.GetExtensionObject
    fullName: ProtoBuf.IExtensible.GetExtensionObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)
    name: GetExtensionObject
    nameWithType: IExtensible.GetExtensionObject
    fullName: ProtoBuf.IExtensible.GetExtensionObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ProtoBuf.IExtension
  commentId: T:ProtoBuf.IExtension
  parent: ProtoBuf
  isExternal: true
  name: IExtension
  nameWithType: IExtension
  fullName: ProtoBuf.IExtension
