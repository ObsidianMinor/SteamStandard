### YamlMime:ManagedReference
items:
- uid: Steam.Common.GameId
  commentId: T:Steam.Common.GameId
  id: GameId
  parent: Steam.Common
  children:
  - Steam.Common.GameId.#ctor(System.UInt32,Steam.Common.GameType,System.UInt32)
  - Steam.Common.GameId.AppId
  - Steam.Common.GameId.Equals(Steam.Common.GameId)
  - Steam.Common.GameId.Equals(System.Object)
  - Steam.Common.GameId.FromUInt64(System.UInt64)
  - Steam.Common.GameId.GetHashCode
  - Steam.Common.GameId.ModId
  - Steam.Common.GameId.op_Implicit(Steam.Common.GameId)~System.UInt64
  - Steam.Common.GameId.op_Implicit(System.UInt64)~Steam.Common.GameId
  - Steam.Common.GameId.ToString
  - Steam.Common.GameId.ToUInt64
  - Steam.Common.GameId.Type
  langs:
  - csharp
  - vb
  name: GameId
  nameWithType: GameId
  fullName: Steam.Common.GameId
  type: Struct
  source:
    id: GameId
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 7
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nA structure that represents an app, mod, shortcut, or P2P file on Steam\n"
  example: []
  syntax:
    content: 'public struct GameId : IEquatable<GameId>'
    content.vb: >-
      Public Structure GameId

          Implements IEquatable(Of GameId)
  implements:
  - System.IEquatable{Steam.Common.GameId}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Steam.Common.GameId.AppId
  commentId: P:Steam.Common.GameId.AppId
  id: AppId
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: AppId
  nameWithType: GameId.AppId
  fullName: Steam.Common.GameId.AppId
  type: Property
  source:
    id: AppId
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 12
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nThe app Id of this game Id if it has one\n"
  example: []
  syntax:
    content: public uint AppId { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property AppId As UInteger
  overload: Steam.Common.GameId.AppId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Common.GameId.Type
  commentId: P:Steam.Common.GameId.Type
  id: Type
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: GameId.Type
  fullName: Steam.Common.GameId.Type
  type: Property
  source:
    id: Type
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 17
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nThe type of this game\n"
  example: []
  syntax:
    content: public GameType Type { get; }
    parameters: []
    return:
      type: Steam.Common.GameType
    content.vb: Public ReadOnly Property Type As GameType
  overload: Steam.Common.GameId.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Common.GameId.ModId
  commentId: P:Steam.Common.GameId.ModId
  id: ModId
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: ModId
  nameWithType: GameId.ModId
  fullName: Steam.Common.GameId.ModId
  type: Property
  source:
    id: ModId
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 22
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nThe mod Id of this game if it's a mod\n"
  example: []
  syntax:
    content: public uint ModId { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property ModId As UInteger
  overload: Steam.Common.GameId.ModId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steam.Common.GameId.#ctor(System.UInt32,Steam.Common.GameType,System.UInt32)
  commentId: M:Steam.Common.GameId.#ctor(System.UInt32,Steam.Common.GameType,System.UInt32)
  id: '#ctor(System.UInt32,Steam.Common.GameType,System.UInt32)'
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: GameId(UInt32, GameType, UInt32)
  nameWithType: GameId.GameId(UInt32, GameType, UInt32)
  fullName: Steam.Common.GameId.GameId(System.UInt32, Steam.Common.GameType, System.UInt32)
  type: Constructor
  source:
    id: .ctor
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 30
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nCreates a new <xref href=\"Steam.Common.GameId\" data-throw-if-not-resolved=\"false\"></xref> with the specified app Id, type, and mod Id\n"
  example: []
  syntax:
    content: public GameId(uint appId, GameType type, uint modId)
    parameters:
    - id: appId
      type: System.UInt32
      description: ''
    - id: type
      type: Steam.Common.GameType
      description: ''
    - id: modId
      type: System.UInt32
      description: ''
    content.vb: Public Sub New(appId As UInteger, type As GameType, modId As UInteger)
  overload: Steam.Common.GameId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steam.Common.GameId.ToUInt64
  commentId: M:Steam.Common.GameId.ToUInt64
  id: ToUInt64
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: ToUInt64()
  nameWithType: GameId.ToUInt64()
  fullName: Steam.Common.GameId.ToUInt64()
  type: Method
  source:
    id: ToUInt64
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 47
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nConverts this game Id to its 64bit representation\n"
  example: []
  syntax:
    content: public ulong ToUInt64()
    return:
      type: System.UInt64
      description: ''
    content.vb: Public Function ToUInt64 As ULong
  overload: Steam.Common.GameId.ToUInt64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steam.Common.GameId.FromUInt64(System.UInt64)
  commentId: M:Steam.Common.GameId.FromUInt64(System.UInt64)
  id: FromUInt64(System.UInt64)
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: FromUInt64(UInt64)
  nameWithType: GameId.FromUInt64(UInt64)
  fullName: Steam.Common.GameId.FromUInt64(System.UInt64)
  type: Method
  source:
    id: FromUInt64
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 57
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nCreates a game Id from its 64bit representation\n"
  example: []
  syntax:
    content: public static GameId FromUInt64(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: ''
    return:
      type: Steam.Common.GameId
      description: ''
    content.vb: Public Shared Function FromUInt64(value As ULong) As GameId
  overload: Steam.Common.GameId.FromUInt64*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steam.Common.GameId.Equals(Steam.Common.GameId)
  commentId: M:Steam.Common.GameId.Equals(Steam.Common.GameId)
  id: Equals(Steam.Common.GameId)
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: Equals(GameId)
  nameWithType: GameId.Equals(GameId)
  fullName: Steam.Common.GameId.Equals(Steam.Common.GameId)
  type: Method
  source:
    id: Equals
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 75
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nReturns whether the provided <xref href=\"Steam.Common.GameId\" data-throw-if-not-resolved=\"false\"></xref> is equal to this <xref href=\"Steam.Common.GameId\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool Equals(GameId other)
    parameters:
    - id: other
      type: Steam.Common.GameId
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As GameId) As Boolean
  overload: Steam.Common.GameId.Equals*
  implements:
  - System.IEquatable{Steam.Common.GameId}.Equals(Steam.Common.GameId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steam.Common.GameId.ToString
  commentId: M:Steam.Common.GameId.ToString
  id: ToString
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GameId.ToString()
  fullName: Steam.Common.GameId.ToString()
  type: Method
  source:
    id: ToString
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 84
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nReturns the 64bit representation of this <xref href=\"Steam.Common.GameId\" data-throw-if-not-resolved=\"false\"></xref> as a string\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Steam.Common.GameId.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steam.Common.GameId.Equals(System.Object)
  commentId: M:Steam.Common.GameId.Equals(System.Object)
  id: Equals(System.Object)
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GameId.Equals(Object)
  fullName: Steam.Common.GameId.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 92
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nReturns whether the provided object is equal to this <xref href=\"Steam.Common.GameId\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Steam.Common.GameId.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steam.Common.GameId.GetHashCode
  commentId: M:Steam.Common.GameId.GetHashCode
  id: GetHashCode
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GameId.GetHashCode()
  fullName: Steam.Common.GameId.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 103
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nGets the hash code of this <xref href=\"Steam.Common.GameId\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Steam.Common.GameId.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steam.Common.GameId.op_Implicit(Steam.Common.GameId)~System.UInt64
  commentId: M:Steam.Common.GameId.op_Implicit(Steam.Common.GameId)~System.UInt64
  id: op_Implicit(Steam.Common.GameId)~System.UInt64
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: Implicit(GameId to UInt64)
  nameWithType: GameId.Implicit(GameId to UInt64)
  fullName: Steam.Common.GameId.Implicit(Steam.Common.GameId to System.UInt64)
  type: Operator
  source:
    id: op_Implicit
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 109
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nConverts this game Id to its 64bit representation\n"
  example: []
  syntax:
    content: public static implicit operator ulong (GameId id)
    parameters:
    - id: id
      type: Steam.Common.GameId
    return:
      type: System.UInt64
    content.vb: Public Shared Widening Operator CType(id As GameId) As ULong
  overload: Steam.Common.GameId.op_Implicit*
  nameWithType.vb: GameId.Widening(GameId to UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.GameId.Widening(Steam.Common.GameId to System.UInt64)
  name.vb: Widening(GameId to UInt64)
- uid: Steam.Common.GameId.op_Implicit(System.UInt64)~Steam.Common.GameId
  commentId: M:Steam.Common.GameId.op_Implicit(System.UInt64)~Steam.Common.GameId
  id: op_Implicit(System.UInt64)~Steam.Common.GameId
  parent: Steam.Common.GameId
  langs:
  - csharp
  - vb
  name: Implicit(UInt64 to GameId)
  nameWithType: GameId.Implicit(UInt64 to GameId)
  fullName: Steam.Common.GameId.Implicit(System.UInt64 to Steam.Common.GameId)
  type: Operator
  source:
    id: op_Implicit
    path: G:\Steam\src\Common\Steam.Common\GameId.cs
    startLine: 115
  assemblies:
  - Steam.Common
  namespace: Steam.Common
  summary: "\nCreates a game Id from its 64bit representation\n"
  example: []
  syntax:
    content: public static implicit operator GameId(ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: Steam.Common.GameId
    content.vb: Public Shared Widening Operator CType(value As ULong) As GameId
  overload: Steam.Common.GameId.op_Implicit*
  nameWithType.vb: GameId.Widening(UInt64 to GameId)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steam.Common.GameId.Widening(System.UInt64 to Steam.Common.GameId)
  name.vb: Widening(UInt64 to GameId)
references:
- uid: Steam.Common
  commentId: N:Steam.Common
  isExternal: false
  name: Steam.Common
  nameWithType: Steam.Common
  fullName: Steam.Common
- uid: System.IEquatable{Steam.Common.GameId}
  commentId: T:System.IEquatable{Steam.Common.GameId}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<GameId>
  nameWithType: IEquatable<GameId>
  fullName: System.IEquatable<Steam.Common.GameId>
  nameWithType.vb: IEquatable(Of GameId)
  fullName.vb: System.IEquatable(Of Steam.Common.GameId)
  name.vb: IEquatable(Of GameId)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steam.Common.GameId
    name: GameId
    nameWithType: GameId
    fullName: Steam.Common.GameId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steam.Common.GameId
    name: GameId
    nameWithType: GameId
    fullName: Steam.Common.GameId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steam.Common.GameId.AppId*
  commentId: Overload:Steam.Common.GameId.AppId
  isExternal: false
  name: AppId
  nameWithType: GameId.AppId
  fullName: Steam.Common.GameId.AppId
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Steam.Common.GameId.Type*
  commentId: Overload:Steam.Common.GameId.Type
  isExternal: false
  name: Type
  nameWithType: GameId.Type
  fullName: Steam.Common.GameId.Type
- uid: Steam.Common.GameType
  commentId: T:Steam.Common.GameType
  parent: Steam.Common
  isExternal: false
  name: GameType
  nameWithType: GameType
  fullName: Steam.Common.GameType
- uid: Steam.Common.GameId.ModId*
  commentId: Overload:Steam.Common.GameId.ModId
  isExternal: false
  name: ModId
  nameWithType: GameId.ModId
  fullName: Steam.Common.GameId.ModId
- uid: Steam.Common.GameId
  commentId: T:Steam.Common.GameId
  parent: Steam.Common
  isExternal: false
  name: GameId
  nameWithType: GameId
  fullName: Steam.Common.GameId
- uid: Steam.Common.GameId.#ctor*
  commentId: Overload:Steam.Common.GameId.#ctor
  isExternal: false
  name: GameId
  nameWithType: GameId.GameId
  fullName: Steam.Common.GameId.GameId
- uid: Steam.Common.GameId.ToUInt64*
  commentId: Overload:Steam.Common.GameId.ToUInt64
  isExternal: false
  name: ToUInt64
  nameWithType: GameId.ToUInt64
  fullName: Steam.Common.GameId.ToUInt64
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Steam.Common.GameId.FromUInt64*
  commentId: Overload:Steam.Common.GameId.FromUInt64
  isExternal: false
  name: FromUInt64
  nameWithType: GameId.FromUInt64
  fullName: Steam.Common.GameId.FromUInt64
- uid: Steam.Common.GameId.Equals*
  commentId: Overload:Steam.Common.GameId.Equals
  isExternal: false
  name: Equals
  nameWithType: GameId.Equals
  fullName: Steam.Common.GameId.Equals
- uid: System.IEquatable{Steam.Common.GameId}.Equals(Steam.Common.GameId)
  commentId: M:System.IEquatable{Steam.Common.GameId}.Equals(Steam.Common.GameId)
  parent: System.IEquatable{Steam.Common.GameId}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(GameId)
  nameWithType: IEquatable<GameId>.Equals(GameId)
  fullName: System.IEquatable<Steam.Common.GameId>.Equals(Steam.Common.GameId)
  nameWithType.vb: IEquatable(Of GameId).Equals(GameId)
  fullName.vb: System.IEquatable(Of Steam.Common.GameId).Equals(Steam.Common.GameId)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<GameId>.Equals
    fullName: System.IEquatable<Steam.Common.GameId>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steam.Common.GameId
    name: GameId
    nameWithType: GameId
    fullName: Steam.Common.GameId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of GameId).Equals
    fullName: System.IEquatable(Of Steam.Common.GameId).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steam.Common.GameId
    name: GameId
    nameWithType: GameId
    fullName: Steam.Common.GameId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steam.Common.GameId.ToString*
  commentId: Overload:Steam.Common.GameId.ToString
  isExternal: false
  name: ToString
  nameWithType: GameId.ToString
  fullName: Steam.Common.GameId.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steam.Common.GameId.GetHashCode*
  commentId: Overload:Steam.Common.GameId.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: GameId.GetHashCode
  fullName: Steam.Common.GameId.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steam.Common.GameId.op_Implicit*
  commentId: Overload:Steam.Common.GameId.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: GameId.Implicit
  fullName: Steam.Common.GameId.Implicit
  nameWithType.vb: GameId.Widening
  fullName.vb: Steam.Common.GameId.Widening
  name.vb: Widening
